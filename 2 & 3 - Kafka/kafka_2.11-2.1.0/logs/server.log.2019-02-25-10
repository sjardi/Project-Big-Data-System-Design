[2019-02-25 10:11:24,957] INFO Reading configuration from: config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2019-02-25 10:11:24,963] INFO autopurge.snapRetainCount set to 3 (org.apache.zookeeper.server.DatadirCleanupManager)
[2019-02-25 10:11:24,964] INFO autopurge.purgeInterval set to 0 (org.apache.zookeeper.server.DatadirCleanupManager)
[2019-02-25 10:11:24,964] INFO Purge task is not scheduled. (org.apache.zookeeper.server.DatadirCleanupManager)
[2019-02-25 10:11:24,966] WARN Either no config or no quorum defined in config, running  in standalone mode (org.apache.zookeeper.server.quorum.QuorumPeerMain)
[2019-02-25 10:11:24,991] INFO Reading configuration from: config/zookeeper.properties (org.apache.zookeeper.server.quorum.QuorumPeerConfig)
[2019-02-25 10:11:24,993] INFO Starting server (org.apache.zookeeper.server.ZooKeeperServerMain)
[2019-02-25 10:11:25,004] INFO Server environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,004] INFO Server environment:host.name=JTonckensLaptop.localdomain (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,005] INFO Server environment:java.version=1.8.0_191 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,005] INFO Server environment:java.vendor=Oracle Corporation (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,006] INFO Server environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,009] INFO Server environment:java.class.path=/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/activation-1.1.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/aopalliance-repackaged-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/commons-lang3-3.5.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/compileScala.mapping:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/compileScala.mapping.asc:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-api-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-basic-auth-extension-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-file-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-json-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-runtime-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-transforms-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/guava-20.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-api-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-locator-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-utils-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-annotations-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-core-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-databind-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-jaxrs-base-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-jaxrs-json-provider-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-module-jaxb-annotations-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.annotation-api-1.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.inject-1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.inject-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.ws.rs-api-2.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-client-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-common-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-container-servlet-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-container-servlet-core-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-hk2-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-media-jaxb-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-server-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-client-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-continuation-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-http-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-io-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-security-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-server-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-servlet-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-servlets-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-util-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka_2.11-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka_2.11-2.1.0-sources.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-clients-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-log4j-appender-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-examples-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-scala_2.11-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-test-utils-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-tools-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/log4j-1.2.17.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/lz4-java-1.5.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/maven-artifact-3.5.4.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/plexus-utils-3.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/reflections-0.9.11.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/rocksdbjni-5.14.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-library-2.11.12.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-logging_2.11-3.9.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-reflect-2.11.12.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/slf4j-api-1.7.25.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/slf4j-log4j12-1.7.25.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/snappy-java-1.1.7.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/validation-api-1.1.0.Final.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zkclient-0.10.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zookeeper-3.4.13.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zstd-jni-1.3.5-4.jar (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,011] INFO Server environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,012] INFO Server environment:java.io.tmpdir=/tmp (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,012] INFO Server environment:java.compiler=<NA> (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,012] INFO Server environment:os.name=Linux (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,013] INFO Server environment:os.arch=amd64 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,013] INFO Server environment:os.version=4.4.0-17134-Microsoft (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,014] INFO Server environment:user.name=jonathan (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,014] INFO Server environment:user.home=/home/jonathan (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,014] INFO Server environment:user.dir=/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,029] INFO tickTime set to 3000 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,031] INFO minSessionTimeout set to -1 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,031] INFO maxSessionTimeout set to -1 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:11:25,050] INFO Using org.apache.zookeeper.server.NIOServerCnxnFactory as server connection factory (org.apache.zookeeper.server.ServerCnxnFactory)
[2019-02-25 10:11:25,057] INFO binding to port 0.0.0.0/0.0.0.0:2181 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2019-02-25 10:19:33,430] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2019-02-25 10:19:33,908] INFO starting (kafka.server.KafkaServer)
[2019-02-25 10:19:33,910] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2019-02-25 10:19:33,935] INFO [ZooKeeperClient] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:19:33,944] INFO Client environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,944] INFO Client environment:host.name=JTonckensLaptop.localdomain (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,944] INFO Client environment:java.version=1.8.0_191 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,944] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,945] INFO Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,945] INFO Client environment:java.class.path=/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/activation-1.1.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/aopalliance-repackaged-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/commons-lang3-3.5.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/compileScala.mapping:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/compileScala.mapping.asc:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-api-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-basic-auth-extension-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-file-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-json-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-runtime-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-transforms-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/guava-20.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-api-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-locator-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-utils-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-annotations-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-core-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-databind-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-jaxrs-base-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-jaxrs-json-provider-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-module-jaxb-annotations-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.annotation-api-1.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.inject-1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.inject-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.ws.rs-api-2.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-client-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-common-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-container-servlet-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-container-servlet-core-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-hk2-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-media-jaxb-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-server-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-client-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-continuation-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-http-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-io-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-security-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-server-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-servlet-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-servlets-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-util-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka_2.11-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka_2.11-2.1.0-sources.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-clients-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-log4j-appender-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-examples-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-scala_2.11-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-test-utils-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-tools-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/log4j-1.2.17.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/lz4-java-1.5.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/maven-artifact-3.5.4.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/plexus-utils-3.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/reflections-0.9.11.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/rocksdbjni-5.14.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-library-2.11.12.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-logging_2.11-3.9.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-reflect-2.11.12.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/slf4j-api-1.7.25.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/slf4j-log4j12-1.7.25.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/snappy-java-1.1.7.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/validation-api-1.1.0.Final.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zkclient-0.10.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zookeeper-3.4.13.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zstd-jni-1.3.5-4.jar (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,946] INFO Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,946] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,947] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,947] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,947] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,947] INFO Client environment:os.version=4.4.0-17134-Microsoft (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,948] INFO Client environment:user.name=jonathan (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,948] INFO Client environment:user.home=/home/jonathan (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,948] INFO Client environment:user.dir=/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,952] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=6000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@7d8995e (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:19:33,974] INFO [ZooKeeperClient] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:19:33,975] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:19:33,984] INFO Socket connection established to localhost/127.0.0.1:2181, initiating session (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:19:33,986] INFO Accepted socket connection from /127.0.0.1:3713 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2019-02-25 10:19:33,996] INFO Client attempting to establish new session at /127.0.0.1:3713 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:19:34,000] INFO Creating new log file: log.a3 (org.apache.zookeeper.server.persistence.FileTxnLog)
[2019-02-25 10:19:34,065] INFO Established session 0x100003724e10000 with negotiated timeout 6000 for client /127.0.0.1:3713 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:19:34,068] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x100003724e10000, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:19:34,073] INFO [ZooKeeperClient] Connected. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:19:34,145] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0x1 zxid:0xa4 txntype:-1 reqpath:n/a Error Path:/consumers Error:KeeperErrorCode = NodeExists for /consumers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,190] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0x2 zxid:0xa5 txntype:-1 reqpath:n/a Error Path:/brokers/ids Error:KeeperErrorCode = NodeExists for /brokers/ids (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,212] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0x3 zxid:0xa6 txntype:-1 reqpath:n/a Error Path:/brokers/topics Error:KeeperErrorCode = NodeExists for /brokers/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,252] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0x4 zxid:0xa7 txntype:-1 reqpath:n/a Error Path:/config/changes Error:KeeperErrorCode = NodeExists for /config/changes (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,291] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0x5 zxid:0xa8 txntype:-1 reqpath:n/a Error Path:/admin/delete_topics Error:KeeperErrorCode = NodeExists for /admin/delete_topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,328] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0x6 zxid:0xa9 txntype:-1 reqpath:n/a Error Path:/brokers/seqid Error:KeeperErrorCode = NodeExists for /brokers/seqid (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,365] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0x7 zxid:0xaa txntype:-1 reqpath:n/a Error Path:/isr_change_notification Error:KeeperErrorCode = NodeExists for /isr_change_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,403] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0x8 zxid:0xab txntype:-1 reqpath:n/a Error Path:/latest_producer_id_block Error:KeeperErrorCode = NodeExists for /latest_producer_id_block (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,439] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0x9 zxid:0xac txntype:-1 reqpath:n/a Error Path:/log_dir_event_notification Error:KeeperErrorCode = NodeExists for /log_dir_event_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,471] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0xa zxid:0xad txntype:-1 reqpath:n/a Error Path:/config/topics Error:KeeperErrorCode = NodeExists for /config/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,499] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0xb zxid:0xae txntype:-1 reqpath:n/a Error Path:/config/clients Error:KeeperErrorCode = NodeExists for /config/clients (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,529] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0xc zxid:0xaf txntype:-1 reqpath:n/a Error Path:/config/users Error:KeeperErrorCode = NodeExists for /config/users (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,553] INFO Got user-level KeeperException when processing sessionid:0x100003724e10000 type:create cxid:0xd zxid:0xb0 txntype:-1 reqpath:n/a Error Path:/config/brokers Error:KeeperErrorCode = NodeExists for /config/brokers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:19:34,832] INFO Cluster ID = FtksfnzlQO2fgiCUFNtFdg (kafka.server.KafkaServer)
[2019-02-25 10:19:34,900] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.1-IV2
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.1-IV2
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-02-25 10:19:34,925] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.1-IV2
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.1-IV2
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-02-25 10:19:34,977] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:19:34,977] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:19:34,979] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:19:35,037] INFO Loading logs. (kafka.log.LogManager)
[2019-02-25 10:19:35,112] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,114] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,144] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,167] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,167] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,169] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,189] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,190] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,191] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,210] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,213] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,217] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,243] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,244] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,246] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,266] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,267] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,269] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,303] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,304] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,306] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,327] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,328] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,330] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,352] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,352] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,354] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,376] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,377] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,379] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,406] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,407] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,409] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,428] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,429] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,431] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,456] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,456] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,458] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,477] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,483] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,485] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,504] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,504] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,506] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,524] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,528] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,529] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,553] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,553] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,555] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,575] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,579] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,583] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,604] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,605] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,607] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,626] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,629] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,632] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,656] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,657] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,658] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,684] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,685] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,692] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,728] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,728] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,730] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,759] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,760] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,761] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,791] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,792] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,794] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,823] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,824] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,826] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,857] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,858] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,859] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,889] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,890] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,892] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,919] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,919] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:35,922] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:35,952] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:35,953] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,015] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,057] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,057] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,059] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,080] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,087] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,089] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,106] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,107] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,108] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,131] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,132] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,136] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,157] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,157] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,159] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,175] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,175] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,177] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,204] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,204] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,206] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,226] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,226] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,228] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,252] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,258] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,260] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,278] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,287] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,288] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,308] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,309] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,311] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,342] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,342] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,344] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,371] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,372] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,373] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,396] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,400] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,402] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,421] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,421] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,423] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,445] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,445] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,447] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,476] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,476] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,478] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,503] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,505] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,507] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,528] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,528] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,530] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,560] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,560] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,561] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,590] INFO [Log partition=streams-plaintext-input-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,591] INFO [Log partition=streams-plaintext-input-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,593] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,620] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,620] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,622] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,648] WARN [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/tmp/kafka-logs] Found a corrupted index file corresponding to log file /tmp/kafka-logs/streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0/00000000000000000000.log due to Corrupt time index found, time index file (/tmp/kafka-logs/streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0/00000000000000000000.timeindex) has non-zero size but the last timestamp is 0 which is less than the first timestamp 1551087512692}, recovering segment and rebuilding index files... (kafka.log.Log)
[2019-02-25 10:19:36,648] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,650] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:449)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:421)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.log.Log.kafka$log$Log$$loadSegmentFiles(Log.scala:421)
	at kafka.log.Log$$anonfun$loadSegments$1.apply$mcV$sp(Log.scala:532)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:526)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,677] INFO [Log partition=streams-wordcount-output-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:19:36,678] INFO [Log partition=streams-wordcount-output-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:19:36,680] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,693] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,697] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,699] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,700] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,702] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,704] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,711] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,714] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,717] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,719] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,721] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,723] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,724] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,726] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,728] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,729] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,732] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,742] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,744] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,746] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,748] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,749] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,751] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,752] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,754] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,762] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,764] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,768] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,770] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,772] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,774] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,775] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,777] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:449)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:421)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.log.Log.kafka$log$Log$$loadSegmentFiles(Log.scala:421)
	at kafka.log.Log$$anonfun$loadSegments$1.apply$mcV$sp(Log.scala:532)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:526)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,779] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,783] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,792] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,794] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,796] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,798] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,799] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,801] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,802] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,804] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,812] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,814] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,817] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,820] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,821] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,824] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,826] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,828] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,833] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,844] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,846] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:19:36,849] INFO Logs loading complete in 1811 ms. (kafka.log.LogManager)
[2019-02-25 10:19:36,865] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2019-02-25 10:19:36,870] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2019-02-25 10:19:37,463] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2019-02-25 10:19:37,509] INFO [SocketServer brokerId=0] Started 1 acceptor threads (kafka.network.SocketServer)
[2019-02-25 10:19:37,533] INFO [ExpirationReaper-0-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:19:37,534] INFO [ExpirationReaper-0-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:19:37,536] INFO [ExpirationReaper-0-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:19:37,550] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-02-25 10:19:37,552] INFO [ReplicaManager broker=0] Stopping serving replicas in dir /tmp/kafka-logs (kafka.server.ReplicaManager)
[2019-02-25 10:19:37,556] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set() (kafka.server.ReplicaFetcherManager)
[2019-02-25 10:19:37,556] INFO [ReplicaAlterLogDirsManager on broker 0] Removed fetcher for partitions Set() (kafka.server.ReplicaAlterLogDirsManager)
[2019-02-25 10:19:37,560] INFO [ReplicaManager broker=0] Broker 0 stopped fetcher for partitions  and stopped moving logs for partitions  because they are in the failed log directory /tmp/kafka-logs. (kafka.server.ReplicaManager)
[2019-02-25 10:19:37,561] INFO Stopping serving logs in dir /tmp/kafka-logs (kafka.log.LogManager)
[2019-02-25 10:19:37,569] ERROR Shutdown broker because all log dirs in /tmp/kafka-logs have failed (kafka.log.LogManager)
[2019-02-25 10:19:37,927] WARN Unable to read additional data from client sessionid 0x100003724e10000, likely client has closed socket (org.apache.zookeeper.server.NIOServerCnxn)
[2019-02-25 10:19:37,931] INFO Closed socket connection for client /127.0.0.1:3713 which had sessionid 0x100003724e10000 (org.apache.zookeeper.server.NIOServerCnxn)
[2019-02-25 10:19:44,207] INFO Expiring session 0x100003724e10000, timeout of 6000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:19:44,209] INFO Processed session termination for sessionid: 0x100003724e10000 (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:13,468] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2019-02-25 10:21:13,923] INFO starting (kafka.server.KafkaServer)
[2019-02-25 10:21:13,924] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2019-02-25 10:21:13,947] INFO [ZooKeeperClient] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:21:13,957] INFO Client environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,957] INFO Client environment:host.name=JTonckensLaptop.localdomain (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,958] INFO Client environment:java.version=1.8.0_191 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,958] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,958] INFO Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,958] INFO Client environment:java.class.path=/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/activation-1.1.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/aopalliance-repackaged-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/commons-lang3-3.5.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/compileScala.mapping:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/compileScala.mapping.asc:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-api-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-basic-auth-extension-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-file-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-json-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-runtime-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-transforms-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/guava-20.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-api-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-locator-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-utils-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-annotations-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-core-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-databind-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-jaxrs-base-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-jaxrs-json-provider-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-module-jaxb-annotations-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.annotation-api-1.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.inject-1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.inject-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.ws.rs-api-2.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-client-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-common-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-container-servlet-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-container-servlet-core-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-hk2-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-media-jaxb-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-server-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-client-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-continuation-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-http-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-io-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-security-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-server-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-servlet-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-servlets-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-util-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka_2.11-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka_2.11-2.1.0-sources.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-clients-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-log4j-appender-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-examples-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-scala_2.11-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-test-utils-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-tools-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/log4j-1.2.17.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/lz4-java-1.5.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/maven-artifact-3.5.4.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/plexus-utils-3.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/reflections-0.9.11.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/rocksdbjni-5.14.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-library-2.11.12.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-logging_2.11-3.9.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-reflect-2.11.12.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/slf4j-api-1.7.25.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/slf4j-log4j12-1.7.25.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/snappy-java-1.1.7.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/validation-api-1.1.0.Final.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zkclient-0.10.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zookeeper-3.4.13.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zstd-jni-1.3.5-4.jar (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,960] INFO Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,960] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,960] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,960] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,961] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,961] INFO Client environment:os.version=4.4.0-17134-Microsoft (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,961] INFO Client environment:user.name=jonathan (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,961] INFO Client environment:user.home=/home/jonathan (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,961] INFO Client environment:user.dir=/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,963] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=6000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@7d8995e (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:21:13,990] INFO [ZooKeeperClient] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:21:13,992] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:21:13,999] INFO Socket connection established to localhost/127.0.0.1:2181, initiating session (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:21:13,999] INFO Accepted socket connection from /127.0.0.1:3871 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2019-02-25 10:21:14,005] INFO Client attempting to establish new session at /127.0.0.1:3871 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:21:14,096] INFO Established session 0x100003724e10001 with negotiated timeout 6000 for client /127.0.0.1:3871 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:21:14,103] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x100003724e10001, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:21:14,110] INFO [ZooKeeperClient] Connected. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:21:14,183] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0x1 zxid:0xb3 txntype:-1 reqpath:n/a Error Path:/consumers Error:KeeperErrorCode = NodeExists for /consumers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,246] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0x2 zxid:0xb4 txntype:-1 reqpath:n/a Error Path:/brokers/ids Error:KeeperErrorCode = NodeExists for /brokers/ids (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,274] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0x3 zxid:0xb5 txntype:-1 reqpath:n/a Error Path:/brokers/topics Error:KeeperErrorCode = NodeExists for /brokers/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,300] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0x4 zxid:0xb6 txntype:-1 reqpath:n/a Error Path:/config/changes Error:KeeperErrorCode = NodeExists for /config/changes (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,326] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0x5 zxid:0xb7 txntype:-1 reqpath:n/a Error Path:/admin/delete_topics Error:KeeperErrorCode = NodeExists for /admin/delete_topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,351] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0x6 zxid:0xb8 txntype:-1 reqpath:n/a Error Path:/brokers/seqid Error:KeeperErrorCode = NodeExists for /brokers/seqid (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,400] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0x7 zxid:0xb9 txntype:-1 reqpath:n/a Error Path:/isr_change_notification Error:KeeperErrorCode = NodeExists for /isr_change_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,458] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0x8 zxid:0xba txntype:-1 reqpath:n/a Error Path:/latest_producer_id_block Error:KeeperErrorCode = NodeExists for /latest_producer_id_block (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,492] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0x9 zxid:0xbb txntype:-1 reqpath:n/a Error Path:/log_dir_event_notification Error:KeeperErrorCode = NodeExists for /log_dir_event_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,527] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0xa zxid:0xbc txntype:-1 reqpath:n/a Error Path:/config/topics Error:KeeperErrorCode = NodeExists for /config/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,601] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0xb zxid:0xbd txntype:-1 reqpath:n/a Error Path:/config/clients Error:KeeperErrorCode = NodeExists for /config/clients (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,643] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0xc zxid:0xbe txntype:-1 reqpath:n/a Error Path:/config/users Error:KeeperErrorCode = NodeExists for /config/users (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,683] INFO Got user-level KeeperException when processing sessionid:0x100003724e10001 type:create cxid:0xd zxid:0xbf txntype:-1 reqpath:n/a Error Path:/config/brokers Error:KeeperErrorCode = NodeExists for /config/brokers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:21:14,923] INFO Cluster ID = FtksfnzlQO2fgiCUFNtFdg (kafka.server.KafkaServer)
[2019-02-25 10:21:14,984] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.1-IV2
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.1-IV2
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-02-25 10:21:15,003] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.1-IV2
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.1-IV2
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-02-25 10:21:15,052] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:21:15,052] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:21:15,054] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:21:15,096] INFO Loading logs. (kafka.log.LogManager)
[2019-02-25 10:21:15,157] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,158] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,188] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,198] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,199] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,200] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,214] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,215] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,216] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,231] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,231] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,233] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,248] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,248] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,250] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,264] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,264] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,266] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,274] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,277] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,279] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,288] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,293] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,295] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,304] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,311] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,313] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,322] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,323] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,324] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,331] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,332] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,333] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,348] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,348] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,350] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,366] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,367] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,371] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,382] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,382] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,384] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,399] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,400] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,402] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,410] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,412] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,413] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,421] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,421] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,423] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,430] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,430] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,432] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,446] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,447] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,448] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,455] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,455] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,458] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,470] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,470] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,472] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,479] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,479] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,481] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,490] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,491] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,493] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,501] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,502] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,503] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,517] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,517] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,521] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,528] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,528] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,529] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,538] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,542] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,544] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,552] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,552] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,554] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,567] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,567] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,570] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,579] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,579] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,621] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,643] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,644] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,654] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,661] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,661] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,663] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,676] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,678] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,679] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,687] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,694] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,696] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,703] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,703] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,705] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,712] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,717] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,720] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,726] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,726] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,728] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,736] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,740] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,742] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,747] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,747] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,749] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,755] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,755] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,757] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,764] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,767] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,770] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,776] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,776] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,777] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,783] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,784] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,786] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,795] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,797] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,799] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,807] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,807] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,809] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,815] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,817] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,820] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,826] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,826] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,827] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,833] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,833] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,835] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,842] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,847] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,849] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,855] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,856] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,857] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,864] INFO [Log partition=streams-plaintext-input-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,867] INFO [Log partition=streams-plaintext-input-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,870] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,878] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,878] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,880] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,892] WARN [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/tmp/kafka-logs] Found a corrupted index file corresponding to log file /tmp/kafka-logs/streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0/00000000000000000000.log due to Corrupt time index found, time index file (/tmp/kafka-logs/streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0/00000000000000000000.timeindex) has non-zero size but the last timestamp is 0 which is less than the first timestamp 1551087512692}, recovering segment and rebuilding index files... (kafka.log.Log)
[2019-02-25 10:21:15,895] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,897] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:449)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:421)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.log.Log.kafka$log$Log$$loadSegmentFiles(Log.scala:421)
	at kafka.log.Log$$anonfun$loadSegments$1.apply$mcV$sp(Log.scala:532)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:526)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,905] INFO [Log partition=streams-wordcount-output-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:21:15,906] INFO [Log partition=streams-wordcount-output-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:21:15,908] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,913] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,920] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,922] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,924] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,926] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,928] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,929] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,931] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,932] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,934] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,936] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,938] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,939] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,941] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,949] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,951] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,953] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,954] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,956] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,958] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,966] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,969] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,971] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,974] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,976] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,984] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,987] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,988] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,990] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,992] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:15,994] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,002] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,004] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,006] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,007] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,009] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,011] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,019] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,021] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,023] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,025] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,027] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,028] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,030] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,032] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,040] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,042] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,044] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,045] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,048] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,050] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:449)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:421)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.log.Log.kafka$log$Log$$loadSegmentFiles(Log.scala:421)
	at kafka.log.Log$$anonfun$loadSegments$1.apply$mcV$sp(Log.scala:532)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:526)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,060] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,062] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,063] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:21:16,066] INFO Logs loading complete in 969 ms. (kafka.log.LogManager)
[2019-02-25 10:21:16,081] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2019-02-25 10:21:16,083] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2019-02-25 10:21:16,648] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2019-02-25 10:21:16,696] INFO [SocketServer brokerId=0] Started 1 acceptor threads (kafka.network.SocketServer)
[2019-02-25 10:21:16,717] INFO [ExpirationReaper-0-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:21:16,720] INFO [ExpirationReaper-0-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:21:16,721] INFO [ExpirationReaper-0-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:21:16,738] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-02-25 10:21:16,739] INFO [ReplicaManager broker=0] Stopping serving replicas in dir /tmp/kafka-logs (kafka.server.ReplicaManager)
[2019-02-25 10:21:16,742] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set() (kafka.server.ReplicaFetcherManager)
[2019-02-25 10:21:16,743] INFO [ReplicaAlterLogDirsManager on broker 0] Removed fetcher for partitions Set() (kafka.server.ReplicaAlterLogDirsManager)
[2019-02-25 10:21:16,747] INFO [ReplicaManager broker=0] Broker 0 stopped fetcher for partitions  and stopped moving logs for partitions  because they are in the failed log directory /tmp/kafka-logs. (kafka.server.ReplicaManager)
[2019-02-25 10:21:16,747] INFO Stopping serving logs in dir /tmp/kafka-logs (kafka.log.LogManager)
[2019-02-25 10:21:16,754] ERROR Shutdown broker because all log dirs in /tmp/kafka-logs have failed (kafka.log.LogManager)
[2019-02-25 10:21:17,087] WARN Unable to read additional data from client sessionid 0x100003724e10001, likely client has closed socket (org.apache.zookeeper.server.NIOServerCnxn)
[2019-02-25 10:21:17,088] INFO Closed socket connection for client /127.0.0.1:3871 which had sessionid 0x100003724e10001 (org.apache.zookeeper.server.NIOServerCnxn)
[2019-02-25 10:21:23,206] INFO Expiring session 0x100003724e10001, timeout of 6000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:21:23,208] INFO Processed session termination for sessionid: 0x100003724e10001 (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:50,966] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2019-02-25 10:22:51,435] INFO starting (kafka.server.KafkaServer)
[2019-02-25 10:22:51,437] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2019-02-25 10:22:51,461] INFO [ZooKeeperClient] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:22:51,470] INFO Client environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,470] INFO Client environment:host.name=JTonckensLaptop.localdomain (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,470] INFO Client environment:java.version=1.8.0_191 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,470] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,471] INFO Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,471] INFO Client environment:java.class.path=/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/activation-1.1.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/aopalliance-repackaged-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/commons-lang3-3.5.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/compileScala.mapping:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/compileScala.mapping.asc:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-api-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-basic-auth-extension-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-file-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-json-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-runtime-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-transforms-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/guava-20.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-api-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-locator-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-utils-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-annotations-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-core-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-databind-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-jaxrs-base-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-jaxrs-json-provider-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-module-jaxb-annotations-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.annotation-api-1.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.inject-1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.inject-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.ws.rs-api-2.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-client-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-common-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-container-servlet-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-container-servlet-core-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-hk2-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-media-jaxb-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-server-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-client-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-continuation-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-http-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-io-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-security-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-server-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-servlet-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-servlets-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-util-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka_2.11-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka_2.11-2.1.0-sources.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-clients-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-log4j-appender-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-examples-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-scala_2.11-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-test-utils-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-tools-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/log4j-1.2.17.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/lz4-java-1.5.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/maven-artifact-3.5.4.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/plexus-utils-3.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/reflections-0.9.11.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/rocksdbjni-5.14.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-library-2.11.12.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-logging_2.11-3.9.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-reflect-2.11.12.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/slf4j-api-1.7.25.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/slf4j-log4j12-1.7.25.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/snappy-java-1.1.7.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/validation-api-1.1.0.Final.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zkclient-0.10.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zookeeper-3.4.13.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zstd-jni-1.3.5-4.jar (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,472] INFO Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,472] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,473] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,473] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,473] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,473] INFO Client environment:os.version=4.4.0-17134-Microsoft (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,473] INFO Client environment:user.name=jonathan (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,474] INFO Client environment:user.home=/home/jonathan (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,474] INFO Client environment:user.dir=/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,476] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=6000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@7d8995e (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:22:51,496] INFO [ZooKeeperClient] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:22:51,500] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:22:51,508] INFO Socket connection established to localhost/127.0.0.1:2181, initiating session (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:22:51,507] INFO Accepted socket connection from /127.0.0.1:4053 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2019-02-25 10:22:51,511] INFO Client attempting to establish new session at /127.0.0.1:4053 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:22:51,581] INFO Established session 0x100003724e10002 with negotiated timeout 6000 for client /127.0.0.1:4053 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:22:51,584] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x100003724e10002, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:22:51,588] INFO [ZooKeeperClient] Connected. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:22:51,649] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0x1 zxid:0xc2 txntype:-1 reqpath:n/a Error Path:/consumers Error:KeeperErrorCode = NodeExists for /consumers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:51,715] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0x2 zxid:0xc3 txntype:-1 reqpath:n/a Error Path:/brokers/ids Error:KeeperErrorCode = NodeExists for /brokers/ids (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:51,739] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0x3 zxid:0xc4 txntype:-1 reqpath:n/a Error Path:/brokers/topics Error:KeeperErrorCode = NodeExists for /brokers/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:51,762] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0x4 zxid:0xc5 txntype:-1 reqpath:n/a Error Path:/config/changes Error:KeeperErrorCode = NodeExists for /config/changes (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:51,790] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0x5 zxid:0xc6 txntype:-1 reqpath:n/a Error Path:/admin/delete_topics Error:KeeperErrorCode = NodeExists for /admin/delete_topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:51,965] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0x6 zxid:0xc7 txntype:-1 reqpath:n/a Error Path:/brokers/seqid Error:KeeperErrorCode = NodeExists for /brokers/seqid (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:52,038] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0x7 zxid:0xc8 txntype:-1 reqpath:n/a Error Path:/isr_change_notification Error:KeeperErrorCode = NodeExists for /isr_change_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:52,091] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0x8 zxid:0xc9 txntype:-1 reqpath:n/a Error Path:/latest_producer_id_block Error:KeeperErrorCode = NodeExists for /latest_producer_id_block (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:52,131] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0x9 zxid:0xca txntype:-1 reqpath:n/a Error Path:/log_dir_event_notification Error:KeeperErrorCode = NodeExists for /log_dir_event_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:52,166] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0xa zxid:0xcb txntype:-1 reqpath:n/a Error Path:/config/topics Error:KeeperErrorCode = NodeExists for /config/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:52,205] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0xb zxid:0xcc txntype:-1 reqpath:n/a Error Path:/config/clients Error:KeeperErrorCode = NodeExists for /config/clients (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:52,241] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0xc zxid:0xcd txntype:-1 reqpath:n/a Error Path:/config/users Error:KeeperErrorCode = NodeExists for /config/users (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:52,280] INFO Got user-level KeeperException when processing sessionid:0x100003724e10002 type:create cxid:0xd zxid:0xce txntype:-1 reqpath:n/a Error Path:/config/brokers Error:KeeperErrorCode = NodeExists for /config/brokers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:22:52,524] INFO Cluster ID = FtksfnzlQO2fgiCUFNtFdg (kafka.server.KafkaServer)
[2019-02-25 10:22:52,582] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.1-IV2
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.1-IV2
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-02-25 10:22:52,605] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.1-IV2
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.1-IV2
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-02-25 10:22:52,646] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:22:52,647] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:22:52,649] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:22:52,692] INFO Loading logs. (kafka.log.LogManager)
[2019-02-25 10:22:52,752] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,754] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,784] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,797] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,801] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,803] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,812] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,816] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,818] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,827] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,827] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,829] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,836] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,837] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,839] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,851] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,851] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,853] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,867] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,867] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,869] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,879] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,881] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,882] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,889] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,889] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,892] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,899] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,899] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,901] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,909] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,911] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,913] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,919] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,920] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,921] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,935] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,935] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,937] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,946] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,948] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,950] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,958] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,964] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,965] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,971] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,972] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,975] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:52,987] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:52,987] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:52,990] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,002] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,002] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,005] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,019] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,019] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,021] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,029] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,031] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,033] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,039] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,039] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,042] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,047] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,048] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,050] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,061] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,062] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,063] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,069] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,070] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,071] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,079] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,082] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,084] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,091] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,091] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,093] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,105] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,106] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,108] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,115] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,118] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,120] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,127] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,127] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,129] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,135] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,135] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,166] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,184] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,185] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,186] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,197] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,200] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,203] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,213] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,216] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,218] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,230] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,233] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,234] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,241] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,241] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,243] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,255] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,256] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,259] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,271] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,271] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,273] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,282] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,284] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,286] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,292] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,292] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,294] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,305] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,305] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,308] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,315] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,317] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,319] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,326] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,326] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,327] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,339] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,339] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,342] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,355] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,356] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,359] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,368] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,368] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,370] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,377] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,377] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,385] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,391] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,391] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,393] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,400] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,401] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,403] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,410] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,410] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,412] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,424] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,425] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,426] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,438] INFO [Log partition=streams-plaintext-input-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,439] INFO [Log partition=streams-plaintext-input-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,442] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,448] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,450] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,452] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,464] WARN [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/tmp/kafka-logs] Found a corrupted index file corresponding to log file /tmp/kafka-logs/streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0/00000000000000000000.log due to Corrupt time index found, time index file (/tmp/kafka-logs/streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0/00000000000000000000.timeindex) has non-zero size but the last timestamp is 0 which is less than the first timestamp 1551087512692}, recovering segment and rebuilding index files... (kafka.log.Log)
[2019-02-25 10:22:53,466] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,468] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:449)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:421)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.log.Log.kafka$log$Log$$loadSegmentFiles(Log.scala:421)
	at kafka.log.Log$$anonfun$loadSegments$1.apply$mcV$sp(Log.scala:532)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:526)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,475] INFO [Log partition=streams-wordcount-output-0, dir=/tmp/kafka-logs] Recovering unflushed segment 0 (kafka.log.Log)
[2019-02-25 10:22:53,475] INFO [Log partition=streams-wordcount-output-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:22:53,477] ERROR Error while loading log dir /tmp/kafka-logs (kafka.log.LogManager)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,488] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,490] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,492] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,494] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,501] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,503] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,504] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,506] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,509] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,516] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,518] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,520] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,521] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,523] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,525] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,533] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,535] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,536] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,538] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,540] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,542] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,544] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,552] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,554] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,555] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,558] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,560] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,567] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,569] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,571] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,573] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,577] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,579] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,586] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,588] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,590] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,593] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,595] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,596] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,604] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,606] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,608] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,610] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,612] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,620] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,622] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,625] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,626] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,628] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,638] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,640] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,643] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,644] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:449)
	at kafka.log.Log$$anonfun$kafka$log$Log$$loadSegmentFiles$3.apply(Log.scala:421)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)
	at scala.collection.mutable.ArrayOps$ofRef.foreach(ArrayOps.scala:186)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at kafka.log.Log.kafka$log$Log$$loadSegmentFiles(Log.scala:421)
	at kafka.log.Log$$anonfun$loadSegments$1.apply$mcV$sp(Log.scala:532)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log$$anonfun$loadSegments$1.apply(Log.scala:526)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:526)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,652] ERROR Error while deleting the clean shutdown file in dir /tmp/kafka-logs (kafka.server.LogDirFailureChannel)
java.io.IOException: Ongeldig argument
	at java.io.RandomAccessFile.setLength(Native Method)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply$mcZ$sp(AbstractIndex.scala:186)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$resize$1.apply(AbstractIndex.scala:173)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.resize(AbstractIndex.scala:173)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply$mcZ$sp(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.log.AbstractIndex$$anonfun$trimToValidSize$1.apply(AbstractIndex.scala:242)
	at kafka.utils.CoreUtils$.inLock(CoreUtils.scala:251)
	at kafka.log.AbstractIndex.trimToValidSize(AbstractIndex.scala:241)
	at kafka.log.LogSegment.recover(LogSegment.scala:377)
	at kafka.log.Log.kafka$log$Log$$recoverSegment(Log.scala:467)
	at kafka.log.Log.kafka$log$Log$$recoverLog(Log.scala:581)
	at kafka.log.Log$$anonfun$2.apply$mcJ$sp(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log$$anonfun$2.apply(Log.scala:552)
	at kafka.log.Log.retryOnOffsetOverflow(Log.scala:1938)
	at kafka.log.Log.loadSegments(Log.scala:551)
	at kafka.log.Log.<init>(Log.scala:276)
	at kafka.log.Log$.apply(Log.scala:2071)
	at kafka.log.LogManager.kafka$log$LogManager$$loadLog(LogManager.scala:265)
	at kafka.log.LogManager$$anonfun$loadLogs$2$$anonfun$11$$anonfun$apply$15$$anonfun$apply$2.apply$mcV$sp(LogManager.scala:345)
	at kafka.utils.CoreUtils$$anon$1.run(CoreUtils.scala:63)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
[2019-02-25 10:22:53,655] INFO Logs loading complete in 963 ms. (kafka.log.LogManager)
[2019-02-25 10:22:53,671] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2019-02-25 10:22:53,674] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2019-02-25 10:22:54,242] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2019-02-25 10:22:54,287] INFO [SocketServer brokerId=0] Started 1 acceptor threads (kafka.network.SocketServer)
[2019-02-25 10:22:54,309] INFO [ExpirationReaper-0-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:22:54,311] INFO [ExpirationReaper-0-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:22:54,312] INFO [ExpirationReaper-0-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:22:54,332] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-02-25 10:22:54,333] INFO [ReplicaManager broker=0] Stopping serving replicas in dir /tmp/kafka-logs (kafka.server.ReplicaManager)
[2019-02-25 10:22:54,338] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set() (kafka.server.ReplicaFetcherManager)
[2019-02-25 10:22:54,339] INFO [ReplicaAlterLogDirsManager on broker 0] Removed fetcher for partitions Set() (kafka.server.ReplicaAlterLogDirsManager)
[2019-02-25 10:22:54,344] INFO [ReplicaManager broker=0] Broker 0 stopped fetcher for partitions  and stopped moving logs for partitions  because they are in the failed log directory /tmp/kafka-logs. (kafka.server.ReplicaManager)
[2019-02-25 10:22:54,344] INFO Stopping serving logs in dir /tmp/kafka-logs (kafka.log.LogManager)
[2019-02-25 10:22:54,347] ERROR Shutdown broker because all log dirs in /tmp/kafka-logs have failed (kafka.log.LogManager)
[2019-02-25 10:22:54,695] WARN Unable to read additional data from client sessionid 0x100003724e10002, likely client has closed socket (org.apache.zookeeper.server.NIOServerCnxn)
[2019-02-25 10:22:54,699] INFO Closed socket connection for client /127.0.0.1:4053 which had sessionid 0x100003724e10002 (org.apache.zookeeper.server.NIOServerCnxn)
[2019-02-25 10:23:02,206] INFO Expiring session 0x100003724e10002, timeout of 6000ms exceeded (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:23:02,208] INFO Processed session termination for sessionid: 0x100003724e10002 (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:05,702] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
[2019-02-25 10:26:06,176] INFO starting (kafka.server.KafkaServer)
[2019-02-25 10:26:06,177] INFO Connecting to zookeeper on localhost:2181 (kafka.server.KafkaServer)
[2019-02-25 10:26:06,203] INFO [ZooKeeperClient] Initializing a new session to localhost:2181. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:26:06,211] INFO Client environment:zookeeper.version=3.4.13-2d71af4dbe22557fda74f9a9b4309b15a7487f03, built on 06/29/2018 00:39 GMT (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,212] INFO Client environment:host.name=JTonckensLaptop.localdomain (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,213] INFO Client environment:java.version=1.8.0_191 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,213] INFO Client environment:java.vendor=Oracle Corporation (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,213] INFO Client environment:java.home=/usr/lib/jvm/java-8-openjdk-amd64/jre (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,213] INFO Client environment:java.class.path=/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/activation-1.1.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/aopalliance-repackaged-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/argparse4j-0.7.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/audience-annotations-0.5.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/commons-lang3-3.5.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/compileScala.mapping:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/compileScala.mapping.asc:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-api-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-basic-auth-extension-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-file-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-json-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-runtime-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/connect-transforms-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/guava-20.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-api-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-locator-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/hk2-utils-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-annotations-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-core-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-databind-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-jaxrs-base-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-jaxrs-json-provider-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jackson-module-jaxb-annotations-2.9.7.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javassist-3.22.0-CR2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.annotation-api-1.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.inject-1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.inject-2.5.0-b42.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.servlet-api-3.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.ws.rs-api-2.1.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/javax.ws.rs-api-2.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jaxb-api-2.3.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-client-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-common-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-container-servlet-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-container-servlet-core-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-hk2-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-media-jaxb-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jersey-server-2.27.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-client-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-continuation-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-http-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-io-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-security-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-server-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-servlet-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-servlets-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jetty-util-9.4.12.v20180830.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/jopt-simple-5.0.4.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka_2.11-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka_2.11-2.1.0-sources.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-clients-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-log4j-appender-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-examples-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-scala_2.11-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-streams-test-utils-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/kafka-tools-2.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/log4j-1.2.17.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/lz4-java-1.5.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/maven-artifact-3.5.4.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/metrics-core-2.2.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/osgi-resource-locator-1.0.1.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/plexus-utils-3.1.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/reflections-0.9.11.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/rocksdbjni-5.14.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-library-2.11.12.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-logging_2.11-3.9.0.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/scala-reflect-2.11.12.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/slf4j-api-1.7.25.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/slf4j-log4j12-1.7.25.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/snappy-java-1.1.7.2.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/validation-api-1.1.0.Final.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zkclient-0.10.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zookeeper-3.4.13.jar:/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0/bin/../libs/zstd-jni-1.3.5-4.jar (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,215] INFO Client environment:java.library.path=/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,215] INFO Client environment:java.io.tmpdir=/tmp (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,215] INFO Client environment:java.compiler=<NA> (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,215] INFO Client environment:os.name=Linux (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,215] INFO Client environment:os.arch=amd64 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,215] INFO Client environment:os.version=4.4.0-17134-Microsoft (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,216] INFO Client environment:user.name=jonathan (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,216] INFO Client environment:user.home=/home/jonathan (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,216] INFO Client environment:user.dir=/mnt/c/Users/Jonathan/Downloads/kafka_2.11-2.1.0 (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,219] INFO Initiating client connection, connectString=localhost:2181 sessionTimeout=6000 watcher=kafka.zookeeper.ZooKeeperClient$ZooKeeperClientWatcher$@7d8995e (org.apache.zookeeper.ZooKeeper)
[2019-02-25 10:26:06,239] INFO [ZooKeeperClient] Waiting until connected. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:26:06,241] INFO Opening socket connection to server localhost/127.0.0.1:2181. Will not attempt to authenticate using SASL (unknown error) (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:26:06,248] INFO Accepted socket connection from /127.0.0.1:4475 (org.apache.zookeeper.server.NIOServerCnxnFactory)
[2019-02-25 10:26:06,248] INFO Socket connection established to localhost/127.0.0.1:2181, initiating session (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:26:06,254] INFO Client attempting to establish new session at /127.0.0.1:4475 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:26:06,321] INFO Established session 0x100003724e10003 with negotiated timeout 6000 for client /127.0.0.1:4475 (org.apache.zookeeper.server.ZooKeeperServer)
[2019-02-25 10:26:06,328] INFO Session establishment complete on server localhost/127.0.0.1:2181, sessionid = 0x100003724e10003, negotiated timeout = 6000 (org.apache.zookeeper.ClientCnxn)
[2019-02-25 10:26:06,338] INFO [ZooKeeperClient] Connected. (kafka.zookeeper.ZooKeeperClient)
[2019-02-25 10:26:06,415] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0x1 zxid:0xd1 txntype:-1 reqpath:n/a Error Path:/consumers Error:KeeperErrorCode = NodeExists for /consumers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,477] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0x2 zxid:0xd2 txntype:-1 reqpath:n/a Error Path:/brokers/ids Error:KeeperErrorCode = NodeExists for /brokers/ids (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,501] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0x3 zxid:0xd3 txntype:-1 reqpath:n/a Error Path:/brokers/topics Error:KeeperErrorCode = NodeExists for /brokers/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,536] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0x4 zxid:0xd4 txntype:-1 reqpath:n/a Error Path:/config/changes Error:KeeperErrorCode = NodeExists for /config/changes (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,592] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0x5 zxid:0xd5 txntype:-1 reqpath:n/a Error Path:/admin/delete_topics Error:KeeperErrorCode = NodeExists for /admin/delete_topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,628] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0x6 zxid:0xd6 txntype:-1 reqpath:n/a Error Path:/brokers/seqid Error:KeeperErrorCode = NodeExists for /brokers/seqid (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,664] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0x7 zxid:0xd7 txntype:-1 reqpath:n/a Error Path:/isr_change_notification Error:KeeperErrorCode = NodeExists for /isr_change_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,697] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0x8 zxid:0xd8 txntype:-1 reqpath:n/a Error Path:/latest_producer_id_block Error:KeeperErrorCode = NodeExists for /latest_producer_id_block (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,765] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0x9 zxid:0xd9 txntype:-1 reqpath:n/a Error Path:/log_dir_event_notification Error:KeeperErrorCode = NodeExists for /log_dir_event_notification (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,810] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0xa zxid:0xda txntype:-1 reqpath:n/a Error Path:/config/topics Error:KeeperErrorCode = NodeExists for /config/topics (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,866] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0xb zxid:0xdb txntype:-1 reqpath:n/a Error Path:/config/clients Error:KeeperErrorCode = NodeExists for /config/clients (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,905] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0xc zxid:0xdc txntype:-1 reqpath:n/a Error Path:/config/users Error:KeeperErrorCode = NodeExists for /config/users (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:06,937] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:create cxid:0xd zxid:0xdd txntype:-1 reqpath:n/a Error Path:/config/brokers Error:KeeperErrorCode = NodeExists for /config/brokers (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:07,150] INFO Cluster ID = FtksfnzlQO2fgiCUFNtFdg (kafka.server.KafkaServer)
[2019-02-25 10:26:07,153] WARN No meta.properties file under dir /tmp/kafka-logs/meta.properties (kafka.server.BrokerMetadataCheckpoint)
[2019-02-25 10:26:07,210] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.1-IV2
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.1-IV2
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-02-25 10:26:07,241] INFO KafkaConfig values: 
	advertised.host.name = null
	advertised.listeners = null
	advertised.port = null
	alter.config.policy.class.name = null
	alter.log.dirs.replication.quota.window.num = 11
	alter.log.dirs.replication.quota.window.size.seconds = 1
	authorizer.class.name = 
	auto.create.topics.enable = true
	auto.leader.rebalance.enable = true
	background.threads = 10
	broker.id = 0
	broker.id.generation.enable = true
	broker.rack = null
	client.quota.callback.class = null
	compression.type = producer
	connection.failed.authentication.delay.ms = 100
	connections.max.idle.ms = 600000
	controlled.shutdown.enable = true
	controlled.shutdown.max.retries = 3
	controlled.shutdown.retry.backoff.ms = 5000
	controller.socket.timeout.ms = 30000
	create.topic.policy.class.name = null
	default.replication.factor = 1
	delegation.token.expiry.check.interval.ms = 3600000
	delegation.token.expiry.time.ms = 86400000
	delegation.token.master.key = null
	delegation.token.max.lifetime.ms = 604800000
	delete.records.purgatory.purge.interval.requests = 1
	delete.topic.enable = true
	fetch.purgatory.purge.interval.requests = 1000
	group.initial.rebalance.delay.ms = 0
	group.max.session.timeout.ms = 300000
	group.min.session.timeout.ms = 6000
	host.name = 
	inter.broker.listener.name = null
	inter.broker.protocol.version = 2.1-IV2
	kafka.metrics.polling.interval.secs = 10
	kafka.metrics.reporters = []
	leader.imbalance.check.interval.seconds = 300
	leader.imbalance.per.broker.percentage = 10
	listener.security.protocol.map = PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL
	listeners = null
	log.cleaner.backoff.ms = 15000
	log.cleaner.dedupe.buffer.size = 134217728
	log.cleaner.delete.retention.ms = 86400000
	log.cleaner.enable = true
	log.cleaner.io.buffer.load.factor = 0.9
	log.cleaner.io.buffer.size = 524288
	log.cleaner.io.max.bytes.per.second = 1.7976931348623157E308
	log.cleaner.min.cleanable.ratio = 0.5
	log.cleaner.min.compaction.lag.ms = 0
	log.cleaner.threads = 1
	log.cleanup.policy = [delete]
	log.dir = /tmp/kafka-logs
	log.dirs = /tmp/kafka-logs
	log.flush.interval.messages = 9223372036854775807
	log.flush.interval.ms = null
	log.flush.offset.checkpoint.interval.ms = 60000
	log.flush.scheduler.interval.ms = 9223372036854775807
	log.flush.start.offset.checkpoint.interval.ms = 60000
	log.index.interval.bytes = 4096
	log.index.size.max.bytes = 10485760
	log.message.downconversion.enable = true
	log.message.format.version = 2.1-IV2
	log.message.timestamp.difference.max.ms = 9223372036854775807
	log.message.timestamp.type = CreateTime
	log.preallocate = false
	log.retention.bytes = -1
	log.retention.check.interval.ms = 300000
	log.retention.hours = 168
	log.retention.minutes = null
	log.retention.ms = null
	log.roll.hours = 168
	log.roll.jitter.hours = 0
	log.roll.jitter.ms = null
	log.roll.ms = null
	log.segment.bytes = 1073741824
	log.segment.delete.delay.ms = 60000
	max.connections.per.ip = 2147483647
	max.connections.per.ip.overrides = 
	max.incremental.fetch.session.cache.slots = 1000
	message.max.bytes = 1000012
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	min.insync.replicas = 1
	num.io.threads = 8
	num.network.threads = 3
	num.partitions = 1
	num.recovery.threads.per.data.dir = 1
	num.replica.alter.log.dirs.threads = null
	num.replica.fetchers = 1
	offset.metadata.max.bytes = 4096
	offsets.commit.required.acks = -1
	offsets.commit.timeout.ms = 5000
	offsets.load.buffer.size = 5242880
	offsets.retention.check.interval.ms = 600000
	offsets.retention.minutes = 10080
	offsets.topic.compression.codec = 0
	offsets.topic.num.partitions = 50
	offsets.topic.replication.factor = 1
	offsets.topic.segment.bytes = 104857600
	password.encoder.cipher.algorithm = AES/CBC/PKCS5Padding
	password.encoder.iterations = 4096
	password.encoder.key.length = 128
	password.encoder.keyfactory.algorithm = null
	password.encoder.old.secret = null
	password.encoder.secret = null
	port = 9092
	principal.builder.class = null
	producer.purgatory.purge.interval.requests = 1000
	queued.max.request.bytes = -1
	queued.max.requests = 500
	quota.consumer.default = 9223372036854775807
	quota.producer.default = 9223372036854775807
	quota.window.num = 11
	quota.window.size.seconds = 1
	replica.fetch.backoff.ms = 1000
	replica.fetch.max.bytes = 1048576
	replica.fetch.min.bytes = 1
	replica.fetch.response.max.bytes = 10485760
	replica.fetch.wait.max.ms = 500
	replica.high.watermark.checkpoint.interval.ms = 5000
	replica.lag.time.max.ms = 10000
	replica.socket.receive.buffer.bytes = 65536
	replica.socket.timeout.ms = 30000
	replication.quota.window.num = 11
	replication.quota.window.size.seconds = 1
	request.timeout.ms = 30000
	reserved.broker.max.id = 1000
	sasl.client.callback.handler.class = null
	sasl.enabled.mechanisms = [GSSAPI]
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.principal.to.local.rules = [DEFAULT]
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.mechanism.inter.broker.protocol = GSSAPI
	sasl.server.callback.handler.class = null
	security.inter.broker.protocol = PLAINTEXT
	socket.receive.buffer.bytes = 102400
	socket.request.max.bytes = 104857600
	socket.send.buffer.bytes = 102400
	ssl.cipher.suites = []
	ssl.client.auth = none
	ssl.enabled.protocols = [TLSv1.2, TLSv1.1, TLSv1]
	ssl.endpoint.identification.algorithm = https
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLS
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.abort.timed.out.transaction.cleanup.interval.ms = 60000
	transaction.max.timeout.ms = 900000
	transaction.remove.expired.transaction.cleanup.interval.ms = 3600000
	transaction.state.log.load.buffer.size = 5242880
	transaction.state.log.min.isr = 1
	transaction.state.log.num.partitions = 50
	transaction.state.log.replication.factor = 1
	transaction.state.log.segment.bytes = 104857600
	transactional.id.expiration.ms = 604800000
	unclean.leader.election.enable = false
	zookeeper.connect = localhost:2181
	zookeeper.connection.timeout.ms = 6000
	zookeeper.max.in.flight.requests = 10
	zookeeper.session.timeout.ms = 6000
	zookeeper.set.acl = false
	zookeeper.sync.time.ms = 2000
 (kafka.server.KafkaConfig)
[2019-02-25 10:26:07,295] INFO [ThrottledChannelReaper-Fetch]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:26:07,296] INFO [ThrottledChannelReaper-Produce]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:26:07,298] INFO [ThrottledChannelReaper-Request]: Starting (kafka.server.ClientQuotaManager$ThrottledChannelReaper)
[2019-02-25 10:26:07,340] INFO Log directory /tmp/kafka-logs not found, creating it. (kafka.log.LogManager)
[2019-02-25 10:26:07,352] INFO Loading logs. (kafka.log.LogManager)
[2019-02-25 10:26:07,360] INFO Logs loading complete in 8 ms. (kafka.log.LogManager)
[2019-02-25 10:26:07,376] INFO Starting log cleanup with a period of 300000 ms. (kafka.log.LogManager)
[2019-02-25 10:26:07,379] INFO Starting log flusher with a default period of 9223372036854775807 ms. (kafka.log.LogManager)
[2019-02-25 10:26:08,025] INFO Awaiting socket connections on 0.0.0.0:9092. (kafka.network.Acceptor)
[2019-02-25 10:26:08,064] INFO [SocketServer brokerId=0] Started 1 acceptor threads (kafka.network.SocketServer)
[2019-02-25 10:26:08,089] INFO [ExpirationReaper-0-Produce]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:26:08,090] INFO [ExpirationReaper-0-Fetch]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:26:08,091] INFO [ExpirationReaper-0-DeleteRecords]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:26:08,110] INFO [LogDirFailureHandler]: Starting (kafka.server.ReplicaManager$LogDirFailureHandler)
[2019-02-25 10:26:08,177] INFO Creating /brokers/ids/0 (is it secure? false) (kafka.zk.KafkaZkClient)
[2019-02-25 10:26:08,255] INFO Result of znode creation at /brokers/ids/0 is: OK (kafka.zk.KafkaZkClient)
[2019-02-25 10:26:08,260] INFO Registered broker 0 at path /brokers/ids/0 with addresses: ArrayBuffer(EndPoint(JTonckensLaptop.localdomain,9092,ListenerName(PLAINTEXT),PLAINTEXT)) (kafka.zk.KafkaZkClient)
[2019-02-25 10:26:08,267] WARN No meta.properties file under dir /tmp/kafka-logs/meta.properties (kafka.server.BrokerMetadataCheckpoint)
[2019-02-25 10:26:08,416] INFO [ExpirationReaper-0-topic]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:26:08,421] INFO [ExpirationReaper-0-Heartbeat]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:26:08,422] INFO [ExpirationReaper-0-Rebalance]: Starting (kafka.server.DelayedOperationPurgatory$ExpiredOperationReaper)
[2019-02-25 10:26:08,458] INFO [GroupCoordinator 0]: Starting up. (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:26:08,461] INFO [GroupCoordinator 0]: Startup complete. (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:26:08,462] INFO [GroupMetadataManager brokerId=0] Removed 0 expired offsets in 2 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:08,546] INFO [ProducerId Manager 0]: Acquired new producerId block (brokerId:0,blockStartProducerId:1000,blockEndProducerId:1999) by writing to Zk with path version 2 (kafka.coordinator.transaction.ProducerIdManager)
[2019-02-25 10:26:08,579] INFO [TransactionCoordinator id=0] Starting up. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-02-25 10:26:08,584] INFO [Transaction Marker Channel Manager 0]: Starting (kafka.coordinator.transaction.TransactionMarkerChannelManager)
[2019-02-25 10:26:08,584] INFO [TransactionCoordinator id=0] Startup complete. (kafka.coordinator.transaction.TransactionCoordinator)
[2019-02-25 10:26:08,650] INFO [/config/changes-event-process-thread]: Starting (kafka.common.ZkNodeChangeNotificationListener$ChangeEventProcessThread)
[2019-02-25 10:26:08,689] INFO [SocketServer brokerId=0] Started processors for 1 acceptors (kafka.network.SocketServer)
[2019-02-25 10:26:08,693] INFO Kafka version : 2.1.0 (org.apache.kafka.common.utils.AppInfoParser)
[2019-02-25 10:26:08,697] INFO Kafka commitId : 809be928f1ae004e (org.apache.kafka.common.utils.AppInfoParser)
[2019-02-25 10:26:08,703] INFO [KafkaServer id=0] started (kafka.server.KafkaServer)
[2019-02-25 10:26:08,907] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:multi cxid:0x77 zxid:0xe1 txntype:-1 reqpath:n/a aborting remaining multi ops. Error Path:/admin/reassign_partitions Error:KeeperErrorCode = NoNode for /admin/reassign_partitions (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:08,937] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set(streams-plaintext-input-0, __consumer_offsets-22, __consumer_offsets-30, __consumer_offsets-8, __consumer_offsets-21, __consumer_offsets-4, __consumer_offsets-27, __consumer_offsets-7, __consumer_offsets-9, __consumer_offsets-46, streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, __consumer_offsets-25, __consumer_offsets-35, __consumer_offsets-41, __consumer_offsets-33, __consumer_offsets-23, __consumer_offsets-49, __consumer_offsets-47, __consumer_offsets-16, __consumer_offsets-28, __consumer_offsets-31, __consumer_offsets-36, __consumer_offsets-42, __consumer_offsets-3, __consumer_offsets-18, __consumer_offsets-37, __consumer_offsets-15, __consumer_offsets-24, __consumer_offsets-38, __consumer_offsets-17, __consumer_offsets-48, __consumer_offsets-19, __consumer_offsets-11, streams-wordcount-output-0, __consumer_offsets-13, __consumer_offsets-2, __consumer_offsets-43, __consumer_offsets-6, __consumer_offsets-14, streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, __consumer_offsets-20, __consumer_offsets-0, __consumer_offsets-44, __consumer_offsets-39, __consumer_offsets-12, __consumer_offsets-45, __consumer_offsets-1, __consumer_offsets-5, __consumer_offsets-26, __consumer_offsets-29, __consumer_offsets-34, __consumer_offsets-10, __consumer_offsets-32, __consumer_offsets-40) (kafka.server.ReplicaFetcherManager)
[2019-02-25 10:26:08,936] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:setData cxid:0x78 zxid:0xe2 txntype:-1 reqpath:n/a Error Path:/config/topics/streams-pipe-output Error:KeeperErrorCode = NoNode for /config/topics/streams-pipe-output (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:09,006] INFO Got user-level KeeperException when processing sessionid:0x100003724e10003 type:multi cxid:0x7c zxid:0xe4 txntype:-1 reqpath:n/a aborting remaining multi ops. Error Path:/admin/preferred_replica_election Error:KeeperErrorCode = NoNode for /admin/preferred_replica_election (org.apache.zookeeper.server.PrepRequestProcessor)
[2019-02-25 10:26:09,024] INFO Topic creation Map(streams-pipe-output-0 -> ArrayBuffer(0)) (kafka.zk.AdminZkClient)
[2019-02-25 10:26:09,079] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:09,090] INFO [Log partition=__consumer_offsets-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 68 ms (kafka.log.Log)
[2019-02-25 10:26:09,093] INFO Created log for partition __consumer_offsets-0 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:09,095] INFO [Partition __consumer_offsets-0 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-0 (kafka.cluster.Partition)
[2019-02-25 10:26:09,101] INFO Replica loaded for partition __consumer_offsets-0 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:09,106] INFO [Partition __consumer_offsets-0 broker=0] __consumer_offsets-0 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:09,184] INFO [KafkaApi-0] Auto creation of topic streams-pipe-output with 1 partitions and replication factor 1 is successful (kafka.server.KafkaApis)
[2019-02-25 10:26:09,308] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:09,310] INFO [Log partition=__consumer_offsets-29, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 36 ms (kafka.log.Log)
[2019-02-25 10:26:09,311] INFO Created log for partition __consumer_offsets-29 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:09,311] INFO [Partition __consumer_offsets-29 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-29 (kafka.cluster.Partition)
[2019-02-25 10:26:09,312] INFO Replica loaded for partition __consumer_offsets-29 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:09,312] INFO [Partition __consumer_offsets-29 broker=0] __consumer_offsets-29 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:09,529] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:09,530] INFO [Log partition=__consumer_offsets-48, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 19 ms (kafka.log.Log)
[2019-02-25 10:26:09,531] INFO Created log for partition __consumer_offsets-48 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:09,532] INFO [Partition __consumer_offsets-48 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-48 (kafka.cluster.Partition)
[2019-02-25 10:26:09,532] INFO Replica loaded for partition __consumer_offsets-48 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:09,532] INFO [Partition __consumer_offsets-48 broker=0] __consumer_offsets-48 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:09,614] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:09,617] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2019-02-25 10:26:09,619] INFO Created log for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> delete, flush.ms -> 9223372036854775807, segment.ms -> 600000, segment.bytes -> 52428800, retention.ms -> 9223372036854775807, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 52428800, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:09,620] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 broker=0] No checkpointed highwatermark is found for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 (kafka.cluster.Partition)
[2019-02-25 10:26:09,620] INFO Replica loaded for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:09,621] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 broker=0] streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-repartition-0 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:09,701] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:09,703] INFO [Log partition=__consumer_offsets-10, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 33 ms (kafka.log.Log)
[2019-02-25 10:26:09,705] INFO Created log for partition __consumer_offsets-10 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:09,706] INFO [Partition __consumer_offsets-10 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-10 (kafka.cluster.Partition)
[2019-02-25 10:26:09,706] INFO Replica loaded for partition __consumer_offsets-10 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:09,706] INFO [Partition __consumer_offsets-10 broker=0] __consumer_offsets-10 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:09,796] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:09,798] INFO [Log partition=__consumer_offsets-45, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 10 ms (kafka.log.Log)
[2019-02-25 10:26:09,799] INFO Created log for partition __consumer_offsets-45 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:09,800] INFO [Partition __consumer_offsets-45 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-45 (kafka.cluster.Partition)
[2019-02-25 10:26:09,800] INFO Replica loaded for partition __consumer_offsets-45 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:09,801] INFO [Partition __consumer_offsets-45 broker=0] __consumer_offsets-45 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:09,914] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:09,917] INFO [Log partition=__consumer_offsets-26, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 31 ms (kafka.log.Log)
[2019-02-25 10:26:09,919] INFO Created log for partition __consumer_offsets-26 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:09,920] INFO [Partition __consumer_offsets-26 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-26 (kafka.cluster.Partition)
[2019-02-25 10:26:09,920] INFO Replica loaded for partition __consumer_offsets-26 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:09,921] INFO [Partition __consumer_offsets-26 broker=0] __consumer_offsets-26 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:09,988] INFO [Log partition=streams-wordcount-output-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:09,990] INFO [Log partition=streams-wordcount-output-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2019-02-25 10:26:09,990] INFO Created log for partition streams-wordcount-output-0 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:09,991] INFO [Partition streams-wordcount-output-0 broker=0] No checkpointed highwatermark is found for partition streams-wordcount-output-0 (kafka.cluster.Partition)
[2019-02-25 10:26:09,991] INFO Replica loaded for partition streams-wordcount-output-0 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:09,991] INFO [Partition streams-wordcount-output-0 broker=0] streams-wordcount-output-0 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:10,111] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:10,114] INFO [Log partition=__consumer_offsets-7, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 28 ms (kafka.log.Log)
[2019-02-25 10:26:10,115] INFO Created log for partition __consumer_offsets-7 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:10,116] INFO [Partition __consumer_offsets-7 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-7 (kafka.cluster.Partition)
[2019-02-25 10:26:10,116] INFO Replica loaded for partition __consumer_offsets-7 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:10,117] INFO [Partition __consumer_offsets-7 broker=0] __consumer_offsets-7 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:10,211] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:10,213] INFO [Log partition=__consumer_offsets-42, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2019-02-25 10:26:10,214] INFO Created log for partition __consumer_offsets-42 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:10,214] INFO [Partition __consumer_offsets-42 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-42 (kafka.cluster.Partition)
[2019-02-25 10:26:10,215] INFO Replica loaded for partition __consumer_offsets-42 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:10,215] INFO [Partition __consumer_offsets-42 broker=0] __consumer_offsets-42 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:10,301] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:10,304] INFO [Log partition=streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 10 ms (kafka.log.Log)
[2019-02-25 10:26:10,305] INFO Created log for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:10,306] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 broker=0] No checkpointed highwatermark is found for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 (kafka.cluster.Partition)
[2019-02-25 10:26:10,306] INFO Replica loaded for partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:10,307] INFO [Partition streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 broker=0] streams-wordcount-KSTREAM-AGGREGATE-STATE-STORE-0000000003-changelog-0 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:10,392] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:10,397] INFO [Log partition=__consumer_offsets-4, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 16 ms (kafka.log.Log)
[2019-02-25 10:26:10,399] INFO Created log for partition __consumer_offsets-4 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:10,400] INFO [Partition __consumer_offsets-4 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-4 (kafka.cluster.Partition)
[2019-02-25 10:26:10,400] INFO Replica loaded for partition __consumer_offsets-4 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:10,400] INFO [Partition __consumer_offsets-4 broker=0] __consumer_offsets-4 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:10,460] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:10,461] INFO [Log partition=__consumer_offsets-23, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-02-25 10:26:10,462] INFO Created log for partition __consumer_offsets-23 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:10,463] INFO [Partition __consumer_offsets-23 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-23 (kafka.cluster.Partition)
[2019-02-25 10:26:10,463] INFO Replica loaded for partition __consumer_offsets-23 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:10,464] INFO [Partition __consumer_offsets-23 broker=0] __consumer_offsets-23 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:10,600] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:10,603] INFO [Log partition=__consumer_offsets-1, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 13 ms (kafka.log.Log)
[2019-02-25 10:26:10,604] INFO Created log for partition __consumer_offsets-1 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:10,605] INFO [Partition __consumer_offsets-1 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-1 (kafka.cluster.Partition)
[2019-02-25 10:26:10,605] INFO Replica loaded for partition __consumer_offsets-1 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:10,606] INFO [Partition __consumer_offsets-1 broker=0] __consumer_offsets-1 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:10,663] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:10,666] INFO [Log partition=__consumer_offsets-20, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 9 ms (kafka.log.Log)
[2019-02-25 10:26:10,669] INFO Created log for partition __consumer_offsets-20 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:10,670] INFO [Partition __consumer_offsets-20 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-20 (kafka.cluster.Partition)
[2019-02-25 10:26:10,670] INFO Replica loaded for partition __consumer_offsets-20 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:10,671] INFO [Partition __consumer_offsets-20 broker=0] __consumer_offsets-20 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:10,753] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:10,755] INFO [Log partition=__consumer_offsets-39, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2019-02-25 10:26:10,755] INFO Created log for partition __consumer_offsets-39 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:10,756] INFO [Partition __consumer_offsets-39 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-39 (kafka.cluster.Partition)
[2019-02-25 10:26:10,756] INFO Replica loaded for partition __consumer_offsets-39 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:10,756] INFO [Partition __consumer_offsets-39 broker=0] __consumer_offsets-39 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:10,833] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:10,834] INFO [Log partition=__consumer_offsets-17, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-02-25 10:26:10,835] INFO Created log for partition __consumer_offsets-17 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:10,836] INFO [Partition __consumer_offsets-17 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-17 (kafka.cluster.Partition)
[2019-02-25 10:26:10,836] INFO Replica loaded for partition __consumer_offsets-17 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:10,836] INFO [Partition __consumer_offsets-17 broker=0] __consumer_offsets-17 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:11,014] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:11,017] INFO [Log partition=__consumer_offsets-36, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 31 ms (kafka.log.Log)
[2019-02-25 10:26:11,018] INFO Created log for partition __consumer_offsets-36 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:11,019] INFO [Partition __consumer_offsets-36 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-36 (kafka.cluster.Partition)
[2019-02-25 10:26:11,021] INFO Replica loaded for partition __consumer_offsets-36 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:11,021] INFO [Partition __consumer_offsets-36 broker=0] __consumer_offsets-36 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:11,101] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:11,103] INFO [Log partition=__consumer_offsets-14, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 23 ms (kafka.log.Log)
[2019-02-25 10:26:11,104] INFO Created log for partition __consumer_offsets-14 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:11,104] INFO [Partition __consumer_offsets-14 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-14 (kafka.cluster.Partition)
[2019-02-25 10:26:11,105] INFO Replica loaded for partition __consumer_offsets-14 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:11,105] INFO [Partition __consumer_offsets-14 broker=0] __consumer_offsets-14 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:11,180] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:11,183] INFO [Log partition=__consumer_offsets-33, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 11 ms (kafka.log.Log)
[2019-02-25 10:26:11,184] INFO Created log for partition __consumer_offsets-33 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:11,185] INFO [Partition __consumer_offsets-33 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-33 (kafka.cluster.Partition)
[2019-02-25 10:26:11,185] INFO Replica loaded for partition __consumer_offsets-33 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:11,185] INFO [Partition __consumer_offsets-33 broker=0] __consumer_offsets-33 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:11,367] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:11,377] INFO [Log partition=__consumer_offsets-49, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 28 ms (kafka.log.Log)
[2019-02-25 10:26:11,380] INFO Created log for partition __consumer_offsets-49 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:11,384] INFO [Partition __consumer_offsets-49 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-49 (kafka.cluster.Partition)
[2019-02-25 10:26:11,387] INFO Replica loaded for partition __consumer_offsets-49 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:11,389] INFO [Partition __consumer_offsets-49 broker=0] __consumer_offsets-49 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:11,482] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:11,488] INFO [Log partition=__consumer_offsets-11, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 23 ms (kafka.log.Log)
[2019-02-25 10:26:11,490] INFO Created log for partition __consumer_offsets-11 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:11,491] INFO [Partition __consumer_offsets-11 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-11 (kafka.cluster.Partition)
[2019-02-25 10:26:11,492] INFO Replica loaded for partition __consumer_offsets-11 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:11,498] INFO [Partition __consumer_offsets-11 broker=0] __consumer_offsets-11 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:11,590] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:11,593] INFO [Log partition=__consumer_offsets-30, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 13 ms (kafka.log.Log)
[2019-02-25 10:26:11,594] INFO Created log for partition __consumer_offsets-30 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:11,594] INFO [Partition __consumer_offsets-30 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-30 (kafka.cluster.Partition)
[2019-02-25 10:26:11,595] INFO Replica loaded for partition __consumer_offsets-30 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:11,595] INFO [Partition __consumer_offsets-30 broker=0] __consumer_offsets-30 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:11,654] INFO [Log partition=streams-plaintext-input-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:11,655] INFO [Log partition=streams-plaintext-input-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-02-25 10:26:11,656] INFO Created log for partition streams-plaintext-input-0 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:11,656] INFO [Partition streams-plaintext-input-0 broker=0] No checkpointed highwatermark is found for partition streams-plaintext-input-0 (kafka.cluster.Partition)
[2019-02-25 10:26:11,657] INFO Replica loaded for partition streams-plaintext-input-0 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:11,657] INFO [Partition streams-plaintext-input-0 broker=0] streams-plaintext-input-0 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:11,777] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:11,779] INFO [Log partition=__consumer_offsets-46, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-02-25 10:26:11,779] INFO Created log for partition __consumer_offsets-46 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:11,780] INFO [Partition __consumer_offsets-46 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-46 (kafka.cluster.Partition)
[2019-02-25 10:26:11,780] INFO Replica loaded for partition __consumer_offsets-46 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:11,781] INFO [Partition __consumer_offsets-46 broker=0] __consumer_offsets-46 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:11,880] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:11,882] INFO [Log partition=__consumer_offsets-27, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 8 ms (kafka.log.Log)
[2019-02-25 10:26:11,883] INFO Created log for partition __consumer_offsets-27 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:11,884] INFO [Partition __consumer_offsets-27 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-27 (kafka.cluster.Partition)
[2019-02-25 10:26:11,884] INFO Replica loaded for partition __consumer_offsets-27 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:11,884] INFO [Partition __consumer_offsets-27 broker=0] __consumer_offsets-27 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:11,995] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:11,998] INFO [Log partition=__consumer_offsets-8, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 24 ms (kafka.log.Log)
[2019-02-25 10:26:11,999] INFO Created log for partition __consumer_offsets-8 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:12,000] INFO [Partition __consumer_offsets-8 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-8 (kafka.cluster.Partition)
[2019-02-25 10:26:12,000] INFO Replica loaded for partition __consumer_offsets-8 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:12,001] INFO [Partition __consumer_offsets-8 broker=0] __consumer_offsets-8 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:12,060] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:12,063] INFO [Log partition=__consumer_offsets-24, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 11 ms (kafka.log.Log)
[2019-02-25 10:26:12,064] INFO Created log for partition __consumer_offsets-24 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:12,064] INFO [Partition __consumer_offsets-24 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-24 (kafka.cluster.Partition)
[2019-02-25 10:26:12,065] INFO Replica loaded for partition __consumer_offsets-24 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:12,065] INFO [Partition __consumer_offsets-24 broker=0] __consumer_offsets-24 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:12,151] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:12,156] INFO [Log partition=__consumer_offsets-43, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 24 ms (kafka.log.Log)
[2019-02-25 10:26:12,158] INFO Created log for partition __consumer_offsets-43 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:12,160] INFO [Partition __consumer_offsets-43 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-43 (kafka.cluster.Partition)
[2019-02-25 10:26:12,160] INFO Replica loaded for partition __consumer_offsets-43 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:12,171] INFO [Partition __consumer_offsets-43 broker=0] __consumer_offsets-43 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:12,241] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:12,242] INFO [Log partition=__consumer_offsets-5, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 24 ms (kafka.log.Log)
[2019-02-25 10:26:12,243] INFO Created log for partition __consumer_offsets-5 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:12,244] INFO [Partition __consumer_offsets-5 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-5 (kafka.cluster.Partition)
[2019-02-25 10:26:12,244] INFO Replica loaded for partition __consumer_offsets-5 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:12,244] INFO [Partition __consumer_offsets-5 broker=0] __consumer_offsets-5 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:12,326] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:12,328] INFO [Log partition=__consumer_offsets-21, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 28 ms (kafka.log.Log)
[2019-02-25 10:26:12,328] INFO Created log for partition __consumer_offsets-21 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:12,329] INFO [Partition __consumer_offsets-21 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-21 (kafka.cluster.Partition)
[2019-02-25 10:26:12,329] INFO Replica loaded for partition __consumer_offsets-21 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:12,330] INFO [Partition __consumer_offsets-21 broker=0] __consumer_offsets-21 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:12,423] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:12,425] INFO [Log partition=__consumer_offsets-2, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 15 ms (kafka.log.Log)
[2019-02-25 10:26:12,426] INFO Created log for partition __consumer_offsets-2 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:12,427] INFO [Partition __consumer_offsets-2 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-2 (kafka.cluster.Partition)
[2019-02-25 10:26:12,427] INFO Replica loaded for partition __consumer_offsets-2 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:12,428] INFO [Partition __consumer_offsets-2 broker=0] __consumer_offsets-2 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:12,545] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:12,549] INFO [Log partition=__consumer_offsets-40, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 30 ms (kafka.log.Log)
[2019-02-25 10:26:12,551] INFO Created log for partition __consumer_offsets-40 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:12,552] INFO [Partition __consumer_offsets-40 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-40 (kafka.cluster.Partition)
[2019-02-25 10:26:12,552] INFO Replica loaded for partition __consumer_offsets-40 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:12,553] INFO [Partition __consumer_offsets-40 broker=0] __consumer_offsets-40 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:12,649] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:12,651] INFO [Log partition=__consumer_offsets-37, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-02-25 10:26:12,651] INFO Created log for partition __consumer_offsets-37 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:12,652] INFO [Partition __consumer_offsets-37 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-37 (kafka.cluster.Partition)
[2019-02-25 10:26:12,652] INFO Replica loaded for partition __consumer_offsets-37 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:12,653] INFO [Partition __consumer_offsets-37 broker=0] __consumer_offsets-37 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:12,826] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:12,828] INFO [Log partition=__consumer_offsets-18, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 10 ms (kafka.log.Log)
[2019-02-25 10:26:12,829] INFO Created log for partition __consumer_offsets-18 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:12,830] INFO [Partition __consumer_offsets-18 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-18 (kafka.cluster.Partition)
[2019-02-25 10:26:12,830] INFO Replica loaded for partition __consumer_offsets-18 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:12,830] INFO [Partition __consumer_offsets-18 broker=0] __consumer_offsets-18 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:12,935] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:12,937] INFO [Log partition=__consumer_offsets-34, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 35 ms (kafka.log.Log)
[2019-02-25 10:26:12,938] INFO Created log for partition __consumer_offsets-34 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:12,939] INFO [Partition __consumer_offsets-34 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-34 (kafka.cluster.Partition)
[2019-02-25 10:26:12,940] INFO Replica loaded for partition __consumer_offsets-34 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:12,940] INFO [Partition __consumer_offsets-34 broker=0] __consumer_offsets-34 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:13,036] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:13,040] INFO [Log partition=__consumer_offsets-15, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 14 ms (kafka.log.Log)
[2019-02-25 10:26:13,042] INFO Created log for partition __consumer_offsets-15 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:13,043] INFO [Partition __consumer_offsets-15 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-15 (kafka.cluster.Partition)
[2019-02-25 10:26:13,043] INFO Replica loaded for partition __consumer_offsets-15 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:13,044] INFO [Partition __consumer_offsets-15 broker=0] __consumer_offsets-15 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:13,133] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:13,135] INFO [Log partition=__consumer_offsets-12, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 34 ms (kafka.log.Log)
[2019-02-25 10:26:13,135] INFO Created log for partition __consumer_offsets-12 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:13,136] INFO [Partition __consumer_offsets-12 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-12 (kafka.cluster.Partition)
[2019-02-25 10:26:13,136] INFO Replica loaded for partition __consumer_offsets-12 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:13,137] INFO [Partition __consumer_offsets-12 broker=0] __consumer_offsets-12 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:13,240] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:13,241] INFO [Log partition=__consumer_offsets-31, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 6 ms (kafka.log.Log)
[2019-02-25 10:26:13,242] INFO Created log for partition __consumer_offsets-31 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:13,243] INFO [Partition __consumer_offsets-31 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-31 (kafka.cluster.Partition)
[2019-02-25 10:26:13,243] INFO Replica loaded for partition __consumer_offsets-31 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:13,243] INFO [Partition __consumer_offsets-31 broker=0] __consumer_offsets-31 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:13,341] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:13,343] INFO [Log partition=__consumer_offsets-9, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 27 ms (kafka.log.Log)
[2019-02-25 10:26:13,343] INFO Created log for partition __consumer_offsets-9 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:13,344] INFO [Partition __consumer_offsets-9 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-9 (kafka.cluster.Partition)
[2019-02-25 10:26:13,344] INFO Replica loaded for partition __consumer_offsets-9 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:13,344] INFO [Partition __consumer_offsets-9 broker=0] __consumer_offsets-9 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:13,475] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:13,478] INFO [Log partition=__consumer_offsets-47, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 15 ms (kafka.log.Log)
[2019-02-25 10:26:13,480] INFO Created log for partition __consumer_offsets-47 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:13,481] INFO [Partition __consumer_offsets-47 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-47 (kafka.cluster.Partition)
[2019-02-25 10:26:13,481] INFO Replica loaded for partition __consumer_offsets-47 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:13,481] INFO [Partition __consumer_offsets-47 broker=0] __consumer_offsets-47 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:13,595] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:13,599] INFO [Log partition=__consumer_offsets-19, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 17 ms (kafka.log.Log)
[2019-02-25 10:26:13,601] INFO Created log for partition __consumer_offsets-19 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:13,602] INFO [Partition __consumer_offsets-19 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-19 (kafka.cluster.Partition)
[2019-02-25 10:26:13,602] INFO Replica loaded for partition __consumer_offsets-19 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:13,602] INFO [Partition __consumer_offsets-19 broker=0] __consumer_offsets-19 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:13,725] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:13,732] INFO [Log partition=__consumer_offsets-28, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 26 ms (kafka.log.Log)
[2019-02-25 10:26:13,735] INFO Created log for partition __consumer_offsets-28 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:13,741] INFO [Partition __consumer_offsets-28 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-28 (kafka.cluster.Partition)
[2019-02-25 10:26:13,741] INFO Replica loaded for partition __consumer_offsets-28 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:13,742] INFO [Partition __consumer_offsets-28 broker=0] __consumer_offsets-28 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:13,847] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:13,850] INFO [Log partition=__consumer_offsets-38, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 12 ms (kafka.log.Log)
[2019-02-25 10:26:13,851] INFO Created log for partition __consumer_offsets-38 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:13,852] INFO [Partition __consumer_offsets-38 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-38 (kafka.cluster.Partition)
[2019-02-25 10:26:13,852] INFO Replica loaded for partition __consumer_offsets-38 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:13,853] INFO [Partition __consumer_offsets-38 broker=0] __consumer_offsets-38 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:13,963] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:13,965] INFO [Log partition=__consumer_offsets-35, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-02-25 10:26:13,966] INFO Created log for partition __consumer_offsets-35 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:13,966] INFO [Partition __consumer_offsets-35 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-35 (kafka.cluster.Partition)
[2019-02-25 10:26:13,967] INFO Replica loaded for partition __consumer_offsets-35 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:13,967] INFO [Partition __consumer_offsets-35 broker=0] __consumer_offsets-35 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:14,059] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:14,061] INFO [Log partition=__consumer_offsets-6, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 20 ms (kafka.log.Log)
[2019-02-25 10:26:14,061] INFO Created log for partition __consumer_offsets-6 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:14,062] INFO [Partition __consumer_offsets-6 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-6 (kafka.cluster.Partition)
[2019-02-25 10:26:14,062] INFO Replica loaded for partition __consumer_offsets-6 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:14,062] INFO [Partition __consumer_offsets-6 broker=0] __consumer_offsets-6 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:14,299] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:14,302] INFO [Log partition=__consumer_offsets-44, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 22 ms (kafka.log.Log)
[2019-02-25 10:26:14,303] INFO Created log for partition __consumer_offsets-44 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:14,304] INFO [Partition __consumer_offsets-44 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-44 (kafka.cluster.Partition)
[2019-02-25 10:26:14,305] INFO Replica loaded for partition __consumer_offsets-44 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:14,305] INFO [Partition __consumer_offsets-44 broker=0] __consumer_offsets-44 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:14,418] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:14,422] INFO [Log partition=__consumer_offsets-25, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 37 ms (kafka.log.Log)
[2019-02-25 10:26:14,424] INFO Created log for partition __consumer_offsets-25 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:14,425] INFO [Partition __consumer_offsets-25 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-25 (kafka.cluster.Partition)
[2019-02-25 10:26:14,426] INFO Replica loaded for partition __consumer_offsets-25 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:14,426] INFO [Partition __consumer_offsets-25 broker=0] __consumer_offsets-25 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:14,476] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:14,477] INFO [Log partition=__consumer_offsets-16, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-02-25 10:26:14,478] INFO Created log for partition __consumer_offsets-16 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:14,479] INFO [Partition __consumer_offsets-16 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-16 (kafka.cluster.Partition)
[2019-02-25 10:26:14,479] INFO Replica loaded for partition __consumer_offsets-16 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:14,479] INFO [Partition __consumer_offsets-16 broker=0] __consumer_offsets-16 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:14,558] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:14,560] INFO [Log partition=__consumer_offsets-22, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 19 ms (kafka.log.Log)
[2019-02-25 10:26:14,561] INFO Created log for partition __consumer_offsets-22 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:14,561] INFO [Partition __consumer_offsets-22 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-22 (kafka.cluster.Partition)
[2019-02-25 10:26:14,561] INFO Replica loaded for partition __consumer_offsets-22 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:14,561] INFO [Partition __consumer_offsets-22 broker=0] __consumer_offsets-22 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:14,642] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:14,643] INFO [Log partition=__consumer_offsets-41, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-02-25 10:26:14,644] INFO Created log for partition __consumer_offsets-41 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:14,645] INFO [Partition __consumer_offsets-41 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-41 (kafka.cluster.Partition)
[2019-02-25 10:26:14,645] INFO Replica loaded for partition __consumer_offsets-41 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:14,645] INFO [Partition __consumer_offsets-41 broker=0] __consumer_offsets-41 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:14,706] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:14,708] INFO [Log partition=__consumer_offsets-32, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 7 ms (kafka.log.Log)
[2019-02-25 10:26:14,709] INFO Created log for partition __consumer_offsets-32 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:14,709] INFO [Partition __consumer_offsets-32 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-32 (kafka.cluster.Partition)
[2019-02-25 10:26:14,710] INFO Replica loaded for partition __consumer_offsets-32 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:14,710] INFO [Partition __consumer_offsets-32 broker=0] __consumer_offsets-32 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:15,469] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:15,471] INFO [Log partition=__consumer_offsets-3, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2019-02-25 10:26:15,472] INFO Created log for partition __consumer_offsets-3 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:15,473] INFO [Partition __consumer_offsets-3 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-3 (kafka.cluster.Partition)
[2019-02-25 10:26:15,473] INFO Replica loaded for partition __consumer_offsets-3 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:15,473] INFO [Partition __consumer_offsets-3 broker=0] __consumer_offsets-3 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:15,575] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:15,577] INFO [Log partition=__consumer_offsets-13, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 16 ms (kafka.log.Log)
[2019-02-25 10:26:15,578] INFO Created log for partition __consumer_offsets-13 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> compact, flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 104857600, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:15,578] INFO [Partition __consumer_offsets-13 broker=0] No checkpointed highwatermark is found for partition __consumer_offsets-13 (kafka.cluster.Partition)
[2019-02-25 10:26:15,579] INFO Replica loaded for partition __consumer_offsets-13 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:15,579] INFO [Partition __consumer_offsets-13 broker=0] __consumer_offsets-13 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:15,674] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-22 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,676] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-25 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,676] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-28 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,676] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-31 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,676] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-34 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,677] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-37 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,677] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-40 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,677] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-43 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,677] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-46 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,677] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-49 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,677] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-41 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,678] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-44 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,678] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-47 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,678] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-1 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,678] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-4 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,678] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-7 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,678] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-10 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,679] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-13 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,679] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-16 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,679] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-19 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,679] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-2 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,679] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-5 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,679] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-8 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,680] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-11 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,680] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-14 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,680] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-17 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,680] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-20 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,680] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-23 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,680] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-26 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,681] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-29 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,681] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-38 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,681] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-35 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,681] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-32 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,681] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-0 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,681] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-3 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,682] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-6 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,682] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-9 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,682] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-12 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,682] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-15 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,682] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-18 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,683] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-21 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,683] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-24 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,683] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-27 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,692] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-30 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,692] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-33 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,692] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-36 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,692] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-39 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,692] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-42 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,692] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-45 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,693] INFO [GroupMetadataManager brokerId=0] Scheduling loading of offsets and group metadata from __consumer_offsets-48 (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,693] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-22 in 17 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,700] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-25 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,706] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-28 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,707] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-31 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,707] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-34 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,707] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-37 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,708] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-40 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,708] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-43 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,708] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-46 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,709] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-49 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,709] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-41 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,709] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-44 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,710] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-47 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,711] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-1 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,711] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-4 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,712] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-7 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,713] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-10 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,713] INFO [ReplicaFetcherManager on broker 0] Removed fetcher for partitions Set(streams-pipe-output-0) (kafka.server.ReplicaFetcherManager)
[2019-02-25 10:26:15,721] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-13 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,722] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-16 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,722] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-19 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,723] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-2 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,725] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-5 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,729] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-8 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,735] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-11 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,735] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-14 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,736] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-17 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,736] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-20 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,737] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-23 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,738] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-26 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,738] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-29 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,738] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-38 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,739] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-35 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,739] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-32 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,741] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-0 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,742] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-3 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,742] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-6 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,742] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-9 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,743] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-12 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,743] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-15 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,752] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-18 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,752] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-21 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,753] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-24 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,753] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-27 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,754] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-30 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,754] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-33 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,755] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-36 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,755] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-39 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,755] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-42 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,756] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-45 in 1 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,757] INFO [GroupMetadataManager brokerId=0] Finished loading offsets and group metadata from __consumer_offsets-48 in 0 milliseconds. (kafka.coordinator.group.GroupMetadataManager)
[2019-02-25 10:26:15,758] INFO [Log partition=streams-pipe-output-0, dir=/tmp/kafka-logs] Loading producer state till offset 0 with message format version 2 (kafka.log.Log)
[2019-02-25 10:26:15,759] INFO [Log partition=streams-pipe-output-0, dir=/tmp/kafka-logs] Completed load of log with 1 segments, log start offset 0 and log end offset 0 in 32 ms (kafka.log.Log)
[2019-02-25 10:26:15,761] INFO Created log for partition streams-pipe-output-0 in /tmp/kafka-logs with properties {compression.type -> producer, message.format.version -> 2.1-IV2, file.delete.delay.ms -> 60000, max.message.bytes -> 1000012, min.compaction.lag.ms -> 0, message.timestamp.type -> CreateTime, message.downconversion.enable -> true, min.insync.replicas -> 1, segment.jitter.ms -> 0, preallocate -> false, min.cleanable.dirty.ratio -> 0.5, index.interval.bytes -> 4096, unclean.leader.election.enable -> false, retention.bytes -> -1, delete.retention.ms -> 86400000, cleanup.policy -> [delete], flush.ms -> 9223372036854775807, segment.ms -> 604800000, segment.bytes -> 1073741824, retention.ms -> 604800000, message.timestamp.difference.max.ms -> 9223372036854775807, segment.index.bytes -> 10485760, flush.messages -> 9223372036854775807}. (kafka.log.LogManager)
[2019-02-25 10:26:15,770] INFO [Partition streams-pipe-output-0 broker=0] No checkpointed highwatermark is found for partition streams-pipe-output-0 (kafka.cluster.Partition)
[2019-02-25 10:26:15,771] INFO Replica loaded for partition streams-pipe-output-0 with initial high watermark 0 (kafka.cluster.Replica)
[2019-02-25 10:26:15,771] INFO [Partition streams-pipe-output-0 broker=0] streams-pipe-output-0 starts at Leader Epoch 0 from offset 0. Previous Leader Epoch was: -1 (kafka.cluster.Partition)
[2019-02-25 10:26:15,859] INFO [GroupCoordinator 0]: Preparing to rebalance group streams-pipe in state PreparingRebalance with old generation 0 (__consumer_offsets-8) (reason: Adding new member streams-pipe-9b31e9a0-5ccd-476c-a216-8e794119ebee-StreamThread-1-consumer-1e0ad9a6-0abe-4bac-99c4-22fa119377bd) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:26:15,859] INFO [GroupCoordinator 0]: Preparing to rebalance group console-consumer-1879 in state PreparingRebalance with old generation 0 (__consumer_offsets-4) (reason: Adding new member consumer-1-0be2ad4b-a932-422d-b14a-d912df97d638) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:26:15,875] INFO [GroupCoordinator 0]: Stabilized group streams-pipe generation 1 (__consumer_offsets-8) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:26:15,880] INFO [GroupCoordinator 0]: Stabilized group console-consumer-1879 generation 1 (__consumer_offsets-4) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:26:15,893] INFO [GroupCoordinator 0]: Assignment received from leader for group streams-pipe for generation 1 (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:26:15,958] INFO [GroupCoordinator 0]: Assignment received from leader for group console-consumer-1879 for generation 1 (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:27:08,773] INFO [GroupCoordinator 0]: Preparing to rebalance group streams-pipe in state PreparingRebalance with old generation 1 (__consumer_offsets-8) (reason: Adding new member streams-pipe-9924bab1-80dc-4546-8b68-1ba8bbf25dcd-StreamThread-1-consumer-1d2aa0d2-c719-40f3-a777-1ab950c98d4b) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:27:10,976] INFO [GroupCoordinator 0]: Member streams-pipe-9b31e9a0-5ccd-476c-a216-8e794119ebee-StreamThread-1-consumer-1e0ad9a6-0abe-4bac-99c4-22fa119377bd in group streams-pipe has failed, removing it from the group (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:27:10,980] INFO [GroupCoordinator 0]: Stabilized group streams-pipe generation 2 (__consumer_offsets-8) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:27:10,991] INFO [GroupCoordinator 0]: Assignment received from leader for group streams-pipe for generation 2 (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:27:22,204] INFO [GroupCoordinator 0]: Preparing to rebalance group console-consumer-1879 in state PreparingRebalance with old generation 1 (__consumer_offsets-4) (reason: removing member consumer-1-0be2ad4b-a932-422d-b14a-d912df97d638 on LeaveGroup) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:27:22,208] INFO [GroupCoordinator 0]: Group console-consumer-1879 with generation 2 is now empty (__consumer_offsets-4) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:27:48,336] INFO [GroupCoordinator 0]: Preparing to rebalance group console-consumer-93091 in state PreparingRebalance with old generation 0 (__consumer_offsets-33) (reason: Adding new member consumer-1-35b50732-2f98-4db1-8204-c4bdf45e46bb) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:27:48,339] INFO [GroupCoordinator 0]: Stabilized group console-consumer-93091 generation 1 (__consumer_offsets-33) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:27:48,345] INFO [GroupCoordinator 0]: Assignment received from leader for group console-consumer-93091 for generation 1 (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:29:07,047] INFO [GroupCoordinator 0]: Preparing to rebalance group console-consumer-93091 in state PreparingRebalance with old generation 1 (__consumer_offsets-33) (reason: removing member consumer-1-35b50732-2f98-4db1-8204-c4bdf45e46bb on LeaveGroup) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:29:07,048] INFO [GroupCoordinator 0]: Group console-consumer-93091 with generation 2 is now empty (__consumer_offsets-33) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:29:44,559] INFO [GroupCoordinator 0]: Preparing to rebalance group console-consumer-49892 in state PreparingRebalance with old generation 0 (__consumer_offsets-13) (reason: Adding new member consumer-1-45fe3725-01a3-45da-b992-229ee5a4e6c8) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:29:44,561] INFO [GroupCoordinator 0]: Stabilized group console-consumer-49892 generation 1 (__consumer_offsets-13) (kafka.coordinator.group.GroupCoordinator)
[2019-02-25 10:29:44,566] INFO [GroupCoordinator 0]: Assignment received from leader for group console-consumer-49892 for generation 1 (kafka.coordinator.group.GroupCoordinator)
